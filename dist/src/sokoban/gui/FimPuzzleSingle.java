/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sokoban.gui;

import sokoban.PuzzlesSingle;
import sokoban.SokobanSingle;

/**
 * A classe FimPuzzleSingle representa a janela exibida ao completar um puzzle no modo single player do jogo Sokoban.
 * Esta janela exibe as estatísticas da partida (tempo decorrido, número de passos e empurrões) e oferece opções
 * para reiniciar o nível, avançar para o próximo nível ou retornar ao menu principal do modo single player.
 * 
 * Esta classe também é responsável por inicializar e configurar os elementos visuais da interface gráfica.
 * 
 * @author Tiago Paiva
 * @author Mário Bonacho
 */
public final class FimPuzzleSingle extends javax.swing.JFrame {

    private final JogoSingle jogoSingle1;
    private final SokobanSingle sokobanSingle;

    private int puzzle;
    private int proxPuzzle;
    
    /**
     * Cria uma nova instância da janela de fim de puzzle no modo single player.
     *
     * @param jogoSingle1 O objeto JogoSingle que controla o jogo no modo single player.
     * @param sokobanSingle O objeto SokobanSingle que representa o jogo no modo single player.
     */
    public FimPuzzleSingle(JogoSingle jogoSingle1, SokobanSingle sokobanSingle) {
        this.jogoSingle1 = jogoSingle1;
        this.sokobanSingle = sokobanSingle;
        initComponents();
        //Muda o cor de fundo
        getContentPane().setBackground(new java.awt.Color(97, 153, 180, 255));
        parametros();
    }

    /**
     * Configura os parâmetros e texto exibidos na janela de fim de puzzle no modo single player.
     */
    public void parametros() {
        label_parabens.setText("Parabéns! Completaste o nível " + jogoSingle1.getNumeroPuzzle() + " !");
        label_passos.setText("Passos : " + sokobanSingle.getPassos());
        label_empurroes.setText("Empurrões : " + sokobanSingle.getEmpurroes());
        label_tempo.setText("Tempo  : " + jogoSingle1.getTempoDecorrido());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bonecoImage = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        btnRestart = new javax.swing.JButton();
        btnNextLevel = new javax.swing.JButton();
        label_tempo = new javax.swing.JLabel();
        label_passos = new javax.swing.JLabel();
        label_empurroes = new javax.swing.JLabel();
        label_parabens = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bonecoImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sokoban/resources/img/fimpuzzle.png"))); // NOI18N

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sokoban/resource/btn/btnMenu.png"))); // NOI18N
        btnExit.setBorderPainted(false);
        btnExit.setContentAreaFilled(false);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnRestart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sokoban/resource/btn/btnRestartFimPuzzle.png"))); // NOI18N
        btnRestart.setBorderPainted(false);
        btnRestart.setContentAreaFilled(false);
        btnRestart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestartActionPerformed(evt);
            }
        });

        btnNextLevel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sokoban/resource/btn/btnProxNivel.png"))); // NOI18N
        btnNextLevel.setBorderPainted(false);
        btnNextLevel.setContentAreaFilled(false);
        btnNextLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextLevelActionPerformed(evt);
            }
        });

        label_tempo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        label_tempo.setText("Tempo : ");

        label_passos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        label_passos.setText("Passos :");

        label_empurroes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        label_empurroes.setText("Empurrôes : ");

        label_parabens.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        label_parabens.setText("Parabéns! Completaste o nível !");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_parabens)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bonecoImage)
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnRestart, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNextLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(label_passos)
                            .addComponent(label_tempo)
                            .addComponent(label_empurroes))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_parabens)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bonecoImage)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label_tempo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_passos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_empurroes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnNextLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnRestart, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextLevelActionPerformed
        // Botão proximo nivel:
        puzzle = jogoSingle1.getNumeroPuzzle();
        proxPuzzle = puzzle +1;
        sokobanSingle.apagarPuzzle();
        jogoSingle1.setPuzzle(PuzzlesSingle.getPuzzleSingle(proxPuzzle));
        jogoSingle1.atualizarNivelPuzzle();
        sokobanSingle.restartArray();
        dispose(); // Fecha a janela atual 
        // Abre uma nova instância de JogoSingle com o novo puzzle
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jogoSingle1.setVisible(true);
            }
        });
    }//GEN-LAST:event_btnNextLevelActionPerformed

    private void btnRestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestartActionPerformed
        // Botão restart:
        jogoSingle1.restartstats();
        sokobanSingle.apagarPuzzle();
        sokobanSingle.setPuzzle(jogoSingle1.guardarPuzzle);
        dispose();
    }//GEN-LAST:event_btnRestartActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        //Botão ao menu:
        MenuNiveisFacil menuNiveis = new MenuNiveisFacil();
        menuNiveis.setLocationRelativeTo(null);
        menuNiveis.setVisible(true);
       
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FimPuzzleSingle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FimPuzzleSingle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FimPuzzleSingle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FimPuzzleSingle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FimPuzzleSingle(new JogoSingle(), new SokobanSingle()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bonecoImage;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNextLevel;
    private javax.swing.JButton btnRestart;
    private javax.swing.JLabel label_empurroes;
    private javax.swing.JLabel label_parabens;
    private javax.swing.JLabel label_passos;
    private javax.swing.JLabel label_tempo;
    // End of variables declaration//GEN-END:variables
}
